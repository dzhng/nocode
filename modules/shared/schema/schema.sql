-- Custom types
create type public.member_roles as enum ('owner', 'member', 'deleted');
create type public.change_type as enum ('create', 'update', 'field', 'delete');

-- WORKSPACE
create table public.workspaces (
  "id"            bigint generated by default as identity primary key,
  "name"          text not null,
  "isDeleted"     boolean not null default false,
  "createdAt"     timestamp with time zone default timezone('utc'::text, now()) not null
);
comment on table public.workspaces is 'A workspace represents a group of users.';

-- USERS
create table public.users (
  "id"            uuid not null primary key, -- UUID from auth.users
  "displayName"   text,
  "email"         text,
  "photoURL"      text,
  "bio"           text,
  "defaultWorkspaceId" bigint references public.workspaces on delete set null,
  "createdAt"     timestamp with time zone default timezone('utc'::text, now()) not null
);
comment on table public.users is 'Profile data for each user.';
comment on column public.users.id is 'References the internal Supabase Auth user.';

-- MEMBER
create table public.members (
  "id"            bigint generated by default as identity primary key,
  "role"          member_roles not null,
  "workspaceId"   bigint references public.workspaces on delete cascade not null,
  "userId"        uuid references public.users on delete cascade not null,
  "createdAt"     timestamp with time zone default timezone('utc'::text, now()) not null
);
comment on table public.members is 'Stores the user to workspace relationship';

-- INVITE
create table public.invites (
  "id"            bigint generated by default as identity primary key,
  "workspaceId"   bigint references public.workspaces on delete cascade not null,
  "inviterId"     uuid references public.users not null,
  "email"         text not null,
  "createdAt"     timestamp with time zone default timezone('utc'::text, now()) not null,

  unique("workspaceId", "email")
);
comment on table public.invites is 'Stores the user to workspace relationship';

-- APP
create table public.apps (
  "id"            bigint generated by default as identity primary key,
  "workspaceId"   bigint references public.workspaces on delete cascade not null,
  "creatorId"     uuid references public.users not null,
  "name"          text not null,
  "order"         integer not null, 
  "isDeleted"     boolean not null default false,
  "createdAt"     timestamp with time zone default timezone('utc'::text, now()) not null
);
comment on table public.apps is 'Basic unit of data in a workspace';

-- APP DATA TYPES
create table public.sheets (
  "id"            bigint generated by default as identity primary key,
  "appId"         bigint references public.apps on delete cascade not null,
  "name"          text not null,
  "order"         integer not null, 
  "fields"        jsonb not null,
  "isDeleted"     boolean not null default false,
  "createdAt"     timestamp with time zone default timezone('utc'::text, now()) not null
);
comment on table public.sheets is 'A sheet stores data that belongs to an app';

create table public.records (
  "id"            bigint generated by default as identity primary key,
  "sheetId"       bigint references public.sheets on delete cascade not null,
  "order"         bigint not null, 
  "cells"        jsonb not null,
  "createdAt"     timestamp with time zone default timezone('utc'::text, now()) not null,
);
comment on table public.records is 'A record contains a set of cells';

create table public.cells (
  "id"            bigint generated by default as identity primary key,
  "recordId"      bigint references public.records on delete cascade not null,
  "fieldId"      integer not null,
  "dataString"    text default null,
  "dataNumber"    bigint default null,
  "dataJSON"      jsonb default null,

  unique("recordId", "fieldId")
);
comment on table public.cells is 'A cell contains an individual piece of data, the data is distributed into different typed fields for sorting purposes';

create table public.recordchange (
  "id"            bigint generated by default as identity primary key,
  "type"          change_type not null,
  "userId"        uuid references public.users on delete cascade not null,
  "sheetId"       bigint references public.sheets on delete cascade not null,
  "recordId"      bigint references public.records on delete set null,
  "fieldId"       bigint default null,
  "value"         jsonb default null,
  "modifiedAt"    timestamp with time zone default timezone('utc'::text, now()) not null
);
comment on table public.recordchange is 'Tracks the timestamp of every change in cell data, useful for querying by last modified timestamps';
